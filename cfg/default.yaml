logging:
  freq: 50
  path: LogFiles
  project: null
  eid: null
  wandb:
    activate: False
    team: "dde"

training:
  seed: 1994
  gpus: [0]
  epochs: 40
  batch_size: 64
  amp_level: "O1"
  precision: 16

ckpt:
  resume_from: null
  seed_from: null
  load_fc: True
  pretrained: True

optimizer:
  # do not decay batch norm and bias and FC
  decay_not_bias_norm: 0
  # initial learning rate
  lr: 1e-3
  # eps for adaptive optimizers
  eps: 1e-4
  # Name of LR scheduler
  lr_scheduler_name: 'onecycle'
  # Name of optimizer
  name: 'adamw'
  # Optimizer weight decay
  weight_decay: 1e-2

model:
  backbone: efficientnet_b2
  version: test
  # name of surgery function
  surgery: null

# Dataset should comply with a following directory hierarchy 
# $data_path/
#     $desc.class1/
#         $train_id/
#         $val_id/
#         $test_id/
#     ...
#     $desc.classN/
#         $train_id/
#         $val_id/
#         $test_id/
dataset:
  size: 50
  augs_type: 'spatial_d4'
  decoder: 'y'
  data_path: '/media/multi_quality_factor/JPEG_standard/'
  pair_constraint: True
  num_workers: 8
  train_id: "TRN"
  test_id: "TST"
  val_id: "VAL"
  # Do not use wilcard now
  # make sure class1 is the cover class
  # for stego classes you might use cost maps as npy files. If you do so, the stego image will be computed on the fly
  desc:
    class1:
      path: "QF75/COVER"
      label: 0
      file_ext: '.jpg'
      file_type: 'image'
      sca_path: null
      payload: null
      cover_link: null
    class3:
      path: "QF75/JUNIWARD_0.3_bpp_BETAs"
      label: 1
      file_ext: '.npz'
      file_type: 'change_map'
      sca_path: null
      payload: null
      cover_link: 1